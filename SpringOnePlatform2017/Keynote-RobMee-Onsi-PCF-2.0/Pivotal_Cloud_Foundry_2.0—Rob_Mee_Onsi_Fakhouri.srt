1
00:00:00,140 --> 00:00:03,240
피보탈

2
00:00:03,460 --> 00:00:06,860
신사 숙녀 여러분, 피보탈의 CEO,

3
00:00:06,860 --> 00:00:09,780
Rob Mee (롭미) 를 박수로 맞아 주세요!

4
00:00:10,000 --> 00:00:14,120
(BGM)

5
00:00:14,320 --> 00:00:19,180
(무대로 향하는 Rob Mee CEO)

6
00:00:20,540 --> 00:00:23,620
좋은 아침입니다 여러분!  이제 9:06분이니까 스텐드업을...

7
00:00:23,620 --> 00:00:24,940
농담이구요, 그냥 앉아계세요

8
00:00:26,520 --> 00:00:29,420
오늘 아침 피터가 피보탈의 스웩을 반영한 양말을 나누어 드렸는데요

9
00:00:29,420 --> 00:00:33,200
피터가 "미래의 향기가 느껴져요!" 라고 말하더군요

10
00:00:33,420 --> 00:00:35,380
[청중 웃음]

11
00:00:35,780 --> 00:00:39,440
제가 "무대에 올라가면 그 말을 인용해야 겠어!" 라고 하니, 그러지 말라더군요.

12
00:00:39,580 --> 00:00:41,960
아무튼, 스프링원 플랫폼 행사에 와 주셔서 감사합니다

13
00:00:42,020 --> 00:00:45,760
라스베가스에서 만났던게 1년밖에 되지 않았다니 놀랍네요

14
00:00:46,355 --> 00:00:48,795
그날 이후 스프링원 플랫폼은 50% 이상 성장했습니다

15
00:00:48,800 --> 00:00:52,280
오늘 여기에 거의 3천명이 모였거든요

16
00:00:52,860 --> 00:00:58,220
[청중 박수]

17
00:00:59,040 --> 00:01:02,060
샌프란 시스코에서 열리고 있는 이 행사는

18
00:01:02,060 --> 00:01:05,040
전세계에 계신 수백만의 스프링 개발자들에게

19
00:01:05,080 --> 00:01:08,020
라이브 스트리밍으로도 제공되고 있습니다.

20
00:01:08,020 --> 00:01:10,400
피보탈이라는 회사를 설립한지 4년만에

21
00:01:10,400 --> 00:01:13,680
이렇게 큰 행사를 진행할 수 있어 영광입니다

22
00:01:13,760 --> 00:01:16,900
피보탈은 세계에서 가장 큰 회사들의 서비스 플랫폼을

23
00:01:16,900 --> 00:01:19,860
피보탈 클라우드 파운드리를 통해 표준화 하도록 돕고 있습니다

24
00:01:19,860 --> 00:01:22,680
이게 저희의 가장 중요한 목적 중 하나구요

25
00:01:23,040 --> 00:01:24,760
이 목적에 굉장히 많은 회사들이 동참하고 있어

26
00:01:25,400 --> 00:01:27,260
저는 엄청난 자부심을 느낍니다

27
00:01:27,740 --> 00:01:31,000
여기에 동참하신 여러분들을 뵙게 되어 정말 영광입니다

28
00:01:31,160 --> 00:01:32,380
특별히

29
00:01:32,780 --> 00:01:35,820
여기에 계신 수많은 스프링 개발자 분들이 만들고 계신

30
00:01:35,820 --> 00:01:38,595
세상에서 가장 중요한 소프트웨어에 개발에 도움을 드릴 수 있다는 점이

31
00:01:38,600 --> 00:01:40,280
바로 그렇습니다

32
00:01:41,320 --> 00:01:42,245
네,

33
00:01:42,245 --> 00:01:44,240
역사상 가장 성대한 스프링 행사가 진행되는 오늘,

34
00:01:44,640 --> 00:01:47,000
대단히 중요한 기술적 진전이 있는

35
00:01:47,380 --> 00:01:48,920
프로덕트 관련 뉴스들을

36
00:01:49,280 --> 00:01:52,200
여기에 오신 모든 여러분과 함께하게 되어 정말 행복하구요

37
00:01:52,340 --> 00:01:54,180
또한 저희 피보탈에의 중요한

38
00:01:54,220 --> 00:01:56,680
프로덕트 업데이트를 소개하게 되어 영광입니다

39
00:01:56,680 --> 00:01:58,560
자 그럼 이제,

40
00:01:58,640 --> 00:02:01,260
피보탈의 R&D 총괄을 맡고 있는

41
00:02:01,300 --> 00:02:02,660
Onsi Fakhouri 를 소개합니다

42
00:02:02,720 --> 00:02:05,980
[청중 박수]

43
00:02:06,400 --> 00:02:11,680
[Onsi 가 무대위로 등장]

44
00:02:14,340 --> 00:02:15,640
미래의 냄새 참 좋군요

45
00:02:18,200 --> 00:02:21,520
안녕하세요 스프링 원 플랫폼에 참석해 주신 여러분

46
00:02:21,640 --> 00:02:24,680
저는 여러분들께 피보탈 이야기를 들려드리겠습니다

47
00:02:24,685 --> 00:02:25,680
우리의 미션은

48
00:02:26,060 --> 00:02:29,140
세상이 소프트웨어를 만드는 방법을 바꾸겠다 는 것입니다

49
00:02:29,540 --> 00:02:31,860
이 목표에는

50
00:02:32,240 --> 00:02:35,220
전체를 관통하는 중요한 사상이 있습니다

51
00:02:35,620 --> 00:02:38,300
그건 바로 "배움"에 관한 생각 인데요

52
00:02:38,580 --> 00:02:40,300
음 어떻게 설명을 드려야 할까

53
00:02:40,380 --> 00:02:42,500
세상을 바라보면

54
00:02:42,860 --> 00:02:46,280
현실을 마주하게 됩니다, 이 현실은

55
00:02:46,280 --> 00:02:48,800
사실 굉장히 복잡하면서도 아름답습니다

56
00:02:49,020 --> 00:02:51,460
근데 우리는 이 복잡한 현실을 마주할때

57
00:02:51,540 --> 00:02:53,440
"단순화" 과정을 통해 받아들입니다

58
00:02:53,580 --> 00:02:56,920
예를 들면, 현실의 어딘가에 우리 스스로를 놓고

59
00:02:56,920 --> 00:02:59,980
어딘가 다른 지점에 우리의 "목표" 를 가져다 놓습니다

60
00:02:59,980 --> 00:03:02,640
음, 그리고 우리는 목표까지 그냥 가기만 하면 되는거죠

61
00:03:03,080 --> 00:03:06,060
그래서 우리는 목표에 이르기 위한 "계획" 들을 만듭니다

62
00:03:06,600 --> 00:03:08,340
더 단순화 하기 힘들겠죠

63
00:03:08,900 --> 00:03:11,080
하지만 현실은 절대로 단순하지 않습니다

64
00:03:11,320 --> 00:03:13,540
사실은 수많은 난관과 장애물로 가득 차 있으며

65
00:03:13,620 --> 00:03:16,660
목표로 가는 여정은 때로 무섭기도 합니다

66
00:03:16,700 --> 00:03:19,580
제한된 자원을 사용해서 산 넘고 물 건너 가다보면

67
00:03:19,580 --> 00:03:22,700
마지막에 우리는 그 결과에 화를 내게 됩니다

68
00:03:22,700 --> 00:03:25,380
목표에 도달하는데 생각보다 훨씬 많은 시간이 걸렸기 때문입니다

69
00:03:26,340 --> 00:03:28,040
하지만 더 나쁜점은

70
00:03:28,500 --> 00:03:31,340
우리는 한치 앞도 보이지 않는 안개속에 있다는 현실이며

71
00:03:31,740 --> 00:03:34,040
심지어 어디로 가고 있는지 조차 모른다는 것입니다

72
00:03:34,640 --> 00:03:37,280
목표가 어딘가에 있는것은 알지만, 확신할 수 있을까요?

73
00:03:37,660 --> 00:03:40,060
그리고 수많은 시간을 거쳐 목표로 향하여

74
00:03:40,240 --> 00:03:44,220
막상 생각했던 곳으로 가 보고 나면

75
00:03:44,400 --> 00:03:46,780
상당히 많은 경우에 우리는

76
00:03:47,060 --> 00:03:49,040
목표가 틀렸다는 현실을 마주하게 됩니다

77
00:03:49,640 --> 00:03:51,040
그건 참 거지 같죠

78
00:03:51,040 --> 00:03:53,020
[청중 웃음]

79
00:03:53,340 --> 00:03:54,720
그럼 어떻게 할까요?

80
00:03:54,840 --> 00:03:56,840
이 복잡한 현실에서 말이죠

81
00:03:57,840 --> 00:03:59,440
수많은 장애물과

82
00:04:00,460 --> 00:04:03,100
안개로 가득차 한치 앞도 보이지 않는 길과

83
00:04:03,100 --> 00:04:05,560
그 안에 있는 수많은 어려움들,

84
00:04:05,920 --> 00:04:07,600
어떻게 해야 할까요?

85
00:04:08,540 --> 00:04:09,540
글쎄요,

86
00:04:10,220 --> 00:04:13,060
제 생각에 가장 좋은 방법은 주변을 탐험하고

87
00:04:14,180 --> 00:04:15,580
선택을 한 후

88
00:04:16,180 --> 00:04:17,580
이동을 하는

89
00:04:18,320 --> 00:04:20,180
이 과정을 지속적으로 반복하는 것 입니다

90
00:04:21,080 --> 00:04:23,980
이 반복이 '코어 피드백 루프' 이며

91
00:04:23,980 --> 00:04:27,020
복잡한 현실을 대하는 동시에, "배움"을 얻는 방법입니다

92
00:04:27,780 --> 00:04:31,820
배움이 현실과 합쳐지면, 아름다운 결과를 볼 수 있죠

93
00:04:32,280 --> 00:04:34,340
우리 피보탈은 수많은 분들이

94
00:04:34,380 --> 00:04:36,460
"배움"의 조직이 되도록 돕습니다

95
00:04:36,460 --> 00:04:39,520
이 목표를 이루는데 가장 중요하다고 생각되는 것은 바로,

96
00:04:39,520 --> 00:04:41,800
"속도" 입니다

97
00:04:42,140 --> 00:04:44,540
"속도"는 "배움"을 활성화 합니다

98
00:04:45,140 --> 00:04:46,740
속도는 "벡터" 값이죠

99
00:04:47,360 --> 00:04:49,020
어떤 규모의 "속력"을 가지고 있고

100
00:04:49,580 --> 00:04:51,000
방향이 있습니다

101
00:04:51,020 --> 00:04:52,820
빨리 움직일 수 있는 능력이라는 것은

102
00:04:52,920 --> 00:04:55,420
효율적인 배움으로 가는 방법이며,

103
00:04:55,420 --> 00:04:59,300
이 두가지 모두 올바른 변화를 유도하기에 중요합니다

104
00:05:00,000 --> 00:05:01,200
피보탈에서는

105
00:05:01,700 --> 00:05:04,660
피보탈 랩을 통해 프로세스와 문화에 대해

106
00:05:04,900 --> 00:05:07,580
"지속적으로 빠르게" 움직일 수 있는 방법을 제공합니다

107
00:05:08,500 --> 00:05:11,480
탐험, 선택, 이동의 "반복"을 체득하게 합니다

108
00:05:11,900 --> 00:05:14,180
이를 위한 프레임워크와 도구를 제공하고 있으며,

109
00:05:14,300 --> 00:05:15,920
동작하는 깔끔한 코드 작성을 돕습니다

110
00:05:16,480 --> 00:05:18,480
이를 통해 빠르게 변화할 수 있게 되는 것이죠

111
00:05:19,240 --> 00:05:21,980
또한 작성된 코드를 프로덕션으로 빠르게 배포할 수 있는 플랫폼이 제공되며

112
00:05:22,060 --> 00:05:24,420
이는 반복적으로 코드를 배포하고, 배포하고, 배포할 수 있습니다

113
00:05:24,420 --> 00:05:26,340
그리고 다시 이 반복을 통해 "배움"을 얻게 되죠

114
00:05:27,360 --> 00:05:31,360
여러분은 목표를 향해 평생토록 빠르게 이동할 수 있게 됩니다

115
00:05:32,160 --> 00:05:33,900
속도를 확보할 수 있게 되구요

116
00:05:34,580 --> 00:05:35,780
그래서 "배움"을 얻을 수 있죠

117
00:05:36,780 --> 00:05:39,580
수많은 조직들이 이 방법을 통해 성공을 이루고 있습니다

118
00:05:39,580 --> 00:05:40,920
이 경험들을

119
00:05:40,920 --> 00:05:43,960
이번 스프링 원 플랫폼 행사에서 들을 수 있게 되어 행복합니다

120
00:05:43,960 --> 00:05:46,360
지금 보시는 회사들이 바로 그런 회사들이구요

121
00:05:46,360 --> 00:05:49,340
모든 산업의 회사들이 포함되어 있습니다

122
00:05:49,540 --> 00:05:52,420
그리고 이게 제가 이 행사를 사랑하는 이유이기도 한데요

123
00:05:52,420 --> 00:05:55,600
서로 다른 수많은 사람들이 모여 함께 듣고 배울 수 있는,

124
00:05:55,600 --> 00:05:58,640
즉, "배움의 방법"을 공유할 수 있는 기회이기 때문입니다.

125
00:05:59,700 --> 00:06:02,440
이런 방식의 배움은 매우 중요한데,

126
00:06:02,440 --> 00:06:05,220
서로 다르게 가진 정보를 공유하고

127
00:06:05,220 --> 00:06:06,260
서로에게 배우는

128
00:06:07,080 --> 00:06:10,080
그리고 피보탈을 통해 배우고, 여러분을 통해 피보탈이 배우는

129
00:06:10,080 --> 00:06:11,080
현장이기 때문입니다

130
00:06:11,680 --> 00:06:13,280
이게 바로 스프링원 플랫폼이죠

131
00:06:13,420 --> 00:06:17,700
저는 작년 스프링원을 통해 배운 것들을 여러분들께 공유할께요

132
00:06:17,700 --> 00:06:21,180
이제부터 속도를 올려서

133
00:06:21,600 --> 00:06:24,095
PCF와 스프링에 대해 이야기를 시작하려고 합니다

134
00:06:24,100 --> 00:06:27,240
아주 빠르게 진행해야 하는데, 정말 빨리요. 왜냐면

135
00:06:27,240 --> 00:06:30,340
23개의 새로운 업데이트를 약 12분 안에 소개하기 때문입니다

136
00:06:30,760 --> 00:06:32,220
안전벨트 메시구요

137
00:06:33,620 --> 00:06:36,640
더 자세한 사항들에 대해서는 아젠다 리스트를 참고해 주세요

138
00:06:36,640 --> 00:06:38,960
스프링으로 시작하겠습니다

139
00:06:38,960 --> 00:06:43,320
말씀 드렸듯이, 내용을 매우 빠르게 진행할거에요

140
00:06:43,440 --> 00:06:44,940
지금까지의 스프링 프로그래밍 모델은

141
00:06:44,940 --> 00:06:48,080
동기화 기반의 블러킹 I/O 였습니다

142
00:06:48,080 --> 00:06:50,900
이 모델은 큰 성공을 거두었구요

143
00:06:50,900 --> 00:06:53,240
수많은 문제들을 효과적으로 해결해 왔습니다

144
00:06:54,280 --> 00:06:57,260
하지만 동시에 고전적인 문제들도 함께 존재했는데요

145
00:06:57,260 --> 00:07:00,060
예를 들면 메모리 사용율의 증가,

146
00:07:00,060 --> 00:07:02,020
또는 지연시간의 증가와 같은 것들이었습니다

147
00:07:02,020 --> 00:07:03,100
그래서 최근에는

148
00:07:03,100 --> 00:07:05,720
비동기 기반의 논블러킹 모델이 제안되고 있습니다

149
00:07:05,780 --> 00:07:07,260
일반적으로 '더' 효율적이라고 알려져 있죠

150
00:07:07,920 --> 00:07:08,920
하지만

151
00:07:09,120 --> 00:07:12,380
프로그래밍 모델 관점에서 이 두가지는 완전히 다릅니다

152
00:07:12,380 --> 00:07:13,460
완전히 외계 언어죠

153
00:07:13,920 --> 00:07:17,420
이 모델중 하나를 선택하는 것은 매우 '비싼' 선택이었습니다

154
00:07:17,920 --> 00:07:19,900
아시다시피 스프링 팀은 '리액터'를 만들어 왔구요

155
00:07:20,280 --> 00:07:24,000
스프링에 '논 블러킹 I/O' 모델의 사용을 가능하게 합니다

156
00:07:24,760 --> 00:07:27,880
따라서 여러분은 기존의 익숙한 기술을 사용해서

157
00:07:27,880 --> 00:07:30,840
잘 문서화된 리액터를 통해 강력한 리액티브 패턴을 구현할 수 있습니다

158
00:07:30,840 --> 00:07:32,440
즉, 서로 쉽게 전환이 가능한 선택이 주어지는 것이죠

159
00:07:32,780 --> 00:07:37,540
스프링 부트 2.0과 스프링 프레임워크 5에 포함 됩니다

160
00:07:37,540 --> 00:07:40,600
더 자세한 사항은 필 웹의 키노트를 주시해 주세요

161
00:07:40,600 --> 00:07:43,120
필은 아마 저보다 훨씬 더 재미있게 설명드릴겁니다

162
00:07:43,520 --> 00:07:44,820
업데이트를 놓치지 마세요

163
00:07:46,260 --> 00:07:49,360
또 다른 업데이트는, 개발툴의 혁신입니다

164
00:07:49,360 --> 00:07:51,880
우리는 이제 더이상 XML 세상에 살고 있지 않죠

165
00:07:51,880 --> 00:07:54,220
세상은 스프링 부트를 더 선호하고

166
00:07:54,220 --> 00:07:56,460
또한 다양한 IDE 선택지가 있습니다

167
00:07:56,600 --> 00:07:58,680
스프링 툴 4를 소개합니다

168
00:07:58,680 --> 00:08:00,380
스프링 부트를 위해 만들어졌고

169
00:08:00,480 --> 00:08:01,980
IDE 종류와 관계없이 사용 가능하며,

170
00:08:01,980 --> 00:08:03,360
엄청나게 빠릅니다

171
00:08:05,060 --> 00:08:08,000
여러분께 다양한 선택이 필요하다는 점을 깨달았고,

172
00:08:08,000 --> 00:08:09,680
따라서 IBM과 파트너쉽을 맺었습니다

173
00:08:09,980 --> 00:08:11,400
IBM의 Open Liberty 를

174
00:08:11,400 --> 00:08:14,320
커머셜 옵션으로서 스프링 부트에 추가하기 위해서죠

175
00:08:15,360 --> 00:08:16,845
IBM의 다양한 스트림 도구들을

176
00:08:16,845 --> 00:08:19,700
스프링 클라우드 스트림에서 사용할 수 있습니다

177
00:08:20,800 --> 00:08:23,540
지금까지 말씀 드린건 모두 스프링 관련 업데이트들 인데요

178
00:08:23,540 --> 00:08:25,780
이건 빙산의 일각에 불과합니다.

179
00:08:25,780 --> 00:08:28,680
이 외에도 이번 행사에서 수많은 업데이트를 확인할 수 있습니다

180
00:08:29,880 --> 00:08:32,580
우리 모두 여기 스프링을 좋아해서 모였지만,

181
00:08:32,580 --> 00:08:33,920
스프링 역시 "집"이 필요합니다

182
00:08:34,700 --> 00:08:36,660
그리고 우리 피보탈은 스프링에게 꼭 맞는 집이 바로

183
00:08:36,660 --> 00:08:39,120
피보탈 클라우드 파운드리라고 믿습니다.

184
00:08:39,120 --> 00:08:41,640
해서 피보탈 클라우드 파운드리의 새 소식을 전해드릴께요

185
00:08:42,160 --> 00:08:44,920
피보탈 클라우드 파운드리의 심장은 '일래스틱 런타임'입니다

186
00:08:45,240 --> 00:08:48,380
바로 여러분의 애플리케이션을 구동하는 플랫폼이구요

187
00:08:48,380 --> 00:08:51,520
여기에 새로운 이름을 붙이기로 결정했는데

188
00:08:51,520 --> 00:08:54,200
'피보탈 애플리케이션 서비스(PAS)' 입니다.

189
00:08:54,620 --> 00:08:57,240
여러분의 애플리케이션을 어떻게 구동해야 할지

190
00:08:57,240 --> 00:08:58,420
아주 잘 알고 있는 도구죠

191
00:08:58,960 --> 00:09:01,600
피보탈 고객의 성공을 주도하고 있는 도구이기도 합니다

192
00:09:01,600 --> 00:09:04,780
개발자들에게 cf push 명령을 통해 굉장한 생산성을 제공합니다

193
00:09:04,780 --> 00:09:07,640
아주 단순하지만 아릅답고 효율적인 명령어 입니다

194
00:09:07,640 --> 00:09:10,420
이 명령어는 바로, "여기 내 소스코드가 있는데",

195
00:09:10,640 --> 00:09:11,987
"클라우드에서 돌리고 싶어",

196
00:09:11,987 --> 00:09:13,840
"하지만 어떻게 하는지는 알고싶지 않아"

197
00:09:15,480 --> 00:09:18,660
PAS 에 대해 우리는 많은걸 배웠어요

198
00:09:18,660 --> 00:09:21,800
그래서 엄청나게 많은 도구를 추가했습니다

199
00:09:21,800 --> 00:09:25,300
보안, 투명성, 로깅, 안정성 등에 수많은 기능이 추가되었습니다

200
00:09:25,520 --> 00:09:27,720
로컬에서 동작하는 환경 등의

201
00:09:27,820 --> 00:09:29,300
하위 확장성도 포함됩니다

202
00:09:30,780 --> 00:09:33,540
플랫폼의 심장은

203
00:09:33,540 --> 00:09:35,700
다양한 언어를 구동할 수 있습니다

204
00:09:35,700 --> 00:09:38,080
대다수의 언어를 구동할 수 있죠

205
00:09:38,960 --> 00:09:41,800
이 부분 역시 여러분에게 선택이 필요하다는 점을 배웠습니다

206
00:09:41,800 --> 00:09:47,020
해서, IBM의 Liberty 빌드팩을 PAS에 추가하였습니다.  
(피보탈 애플리케이션 서비스)

207
00:09:48,280 --> 00:09:52,840
여러분께 더 많은 도구에 대한 선택이 주어졌습니다

208
00:09:53,320 --> 00:09:56,420
우리는 윈도우 애플리케이션에 대한 지원도 추가 했습니다

209
00:09:56,420 --> 00:09:59,260
바로 닷넷 워크로드인데, 플랫폼에서 아주 잘 동작 합니다

210
00:09:59,260 --> 00:10:01,260
그리고 여기에 더 많은 기능을 추가할 예정입니다

211
00:10:01,660 --> 00:10:04,260
새로운 윈도우 서버 2016의 지원을 소개 합니다

212
00:10:04,260 --> 00:10:07,280
네이티브 윈도우 서버 컨테이너를 사용할 수 있구요

213
00:10:07,280 --> 00:10:09,980
바로 다음 버전에 추가되어 릴리즈 됩니다

214
00:10:09,980 --> 00:10:12,660
닷넷과 관련된 다양한 워크로드를

215
00:10:12,660 --> 00:10:17,040
플랫폼에서 사용할 수 있게 됩니다

216
00:10:18,580 --> 00:10:21,780
이것 외에도 플랫폼을 사용하는 고객들로 부터 배운 내용은

217
00:10:21,780 --> 00:10:24,480
수천개의 애플리케이션들이

218
00:10:24,480 --> 00:10:27,900
수백개의 가상 머신에서 동작하며

219
00:10:27,900 --> 00:10:30,880
피보탈 애플리케이션 서비스에서 아주 잘 동작한다는 점입니다

220
00:10:30,880 --> 00:10:32,900
이는 확장을 지원하는 설계로 인해 가능한 것인데

221
00:10:33,280 --> 00:10:35,274
처음부터 20개 이상의 가상 머신을 필요로해

222
00:10:35,274 --> 00:10:36,520
약간 무거울 수 있습니다

223
00:10:37,060 --> 00:10:39,940
이 부분 역시 여러분께 선택이 주어져야 합니다

224
00:10:39,940 --> 00:10:42,940
그래서 저는, PAS의 스몰 풋 프린트를 소개합니다

225
00:10:43,500 --> 00:10:46,520
HA, 확장, 그 외의 다른 거의 모든 기능을 지원하지만,

226
00:10:46,520 --> 00:10:48,440
단 6개의 가상 머신만을 필요로 합니다.

227
00:10:48,680 --> 00:10:51,160
다양한 클라우드 서비스에서 오늘 즉시 사용 가능합니다

228
00:10:51,520 --> 00:10:54,460
특히 MS Azure 마켓플레이스에서 원클릭으로 사용 가능합니다

229
00:10:55,780 --> 00:10:59,180
지금까지 말씀드린 내용이 PAS 업데이트 입니다

230
00:10:59,320 --> 00:11:01,100
PAS는 사실

231
00:11:01,100 --> 00:11:04,180
피보탈 클라우드 파운드리의 일부분 입니다

232
00:11:04,180 --> 00:11:07,480
PAS는 BOSH를 통해 동작하는데

233
00:11:09,300 --> 00:11:11,880
음 이미지가 흔들려서 잘 보이지 않는데요

234
00:11:11,880 --> 00:11:13,040
이 점에 대해 사과 드립니다

235
00:11:13,360 --> 00:11:16,040
아무튼 BOSH가 중요한데,

236
00:11:16,040 --> 00:11:18,720
불가능한 일을 가능하게 하기 때문이죠

237
00:11:19,040 --> 00:11:22,080
BOSH는 아주 작은 오퍼레이션 팀이

238
00:11:22,080 --> 00:11:25,440
수천개의 애플리케이션을 PAS에서 운영 가능하도록 합니다

239
00:11:25,660 --> 00:11:28,120
BOSH는 버튼 클릭 만으로 주기적 플랫폼의 업그레이드

240
00:11:28,120 --> 00:11:31,200
그리고 보안 패치를 적용하는 등 엄청난 일을 합니다

241
00:11:31,440 --> 00:11:33,580
이 과정을 통해 우리는 오퍼레이터들에게서 많은걸 배웠는데

242
00:11:33,760 --> 00:11:38,980
사실 PAS가 매우 복잡한 구조여서 동작 이해가 힘들다는 것입니다

243
00:11:39,180 --> 00:11:42,120
그래서 우리는 "헬스 와치"에 투자했습니다

244
00:11:42,300 --> 00:11:46,480
이건 PAS가 어떻게 동작하는지 보여주는 아름다운 대시보드를 제공합니다

245
00:11:46,480 --> 00:11:49,620
피보탈의 오퍼레이션 엔지니어들은

246
00:11:49,620 --> 00:11:52,960
GCP 위에서 피보탈 트래커와 PAS를 운영하고 있으며

247
00:11:52,960 --> 00:11:55,140
헬스 워치를 매우 좋아합니다.

248
00:11:55,220 --> 00:11:59,540
그래서 GA를 결정했으며, 다음 버전에 추가될 것입니다

249
00:12:01,280 --> 00:12:04,020
저희가 배운 또 다른 점은

250
00:12:04,020 --> 00:12:08,820
불가능을 가능으로 만드는 과정에 오랜 시간이 걸릴 수 있다는 점 입니다

251
00:12:08,900 --> 00:12:12,260
그래서 우리는 업그레이드 시간을 단축하는 기능을 추가했습니다

252
00:12:12,380 --> 00:12:15,880
다음 버전부터는 업그레이드에 수시간이 단축 됩니다

253
00:12:17,180 --> 00:12:22,560
또한 플랫폼 배포에 CI/CD 도구인 Concourse를 통한 자동화가 추가 되었습니다

254
00:12:22,660 --> 00:12:26,620
플랫폼 업그레이드 및 설치에 파이프라인 적용을 통해

255
00:12:27,020 --> 00:12:30,080
자동으로 패키지를 다운로드 하고 업그레이드를 적용할 수 있습니다

256
00:12:30,080 --> 00:12:33,380
즉, 플랫폼을 패치하고 업그레이드하며, 설치하는데

257
00:12:33,380 --> 00:12:36,200
더 안전하고 편리한 사용성을 제공하게 되었다는 의미입니다

258
00:12:36,860 --> 00:12:39,840
BOSH는 멀티 클라우드 부분에 있어 심장과 같습니다

259
00:12:39,880 --> 00:12:44,100
다양한 클라우드 서비스에 클라우드 파운더리를 배포합니다

260
00:12:44,300 --> 00:12:46,380
여기에 여러분은 또 다른 선택이 필요합니다

261
00:12:47,520 --> 00:12:53,440
우리는 다음 버전에  '애저 스택' 베타지원을 추가 하기로 했습니다

262
00:12:53,980 --> 00:12:56,740
행사장 바깥의 마이크로소프트 부스에 가 보시면

263
00:12:56,740 --> 00:12:59,820
'애저 스택'이 설치된 하드웨어를 보실 수 있구요

264
00:12:59,820 --> 00:13:04,880
이는 시리얼 넘버 000001을 가지는 최초의

265
00:13:05,240 --> 00:13:08,080
피보탈 클라우드 파운더리의 애저스택 설치 버전 입니다

266
00:13:08,080 --> 00:13:09,080
정말 대단하죠

267
00:13:09,920 --> 00:13:11,980
'버추스트림'과 파트너쉽을 맺었구요

268
00:13:12,120 --> 00:13:15,220
이는 '완전 관리형' PCF 서비스를 제공합니다

269
00:13:15,820 --> 00:13:17,800
그리고 '델이엠씨'로 부터

270
00:13:18,000 --> 00:13:20,260
'피보탈 레디' 시스템이 제공될 예정인데

271
00:13:20,260 --> 00:13:23,560
데이터센터에 PCF를 매우 짧은 시간내에 준비할 수 있게 됩니다

272
00:13:25,240 --> 00:13:28,200
이 많은 업데이트들은 기본적으로

273
00:13:28,200 --> 00:13:31,080
여러분들로 부터 받은 피드백을 통해 만들어진 것들입니다

274
00:13:31,080 --> 00:13:34,240
우리는 언제나 여러분의 피드백을 중요하게 여기며

275
00:13:34,280 --> 00:13:36,800
언제든 피드백을 주시길 바라며, 아울러 이런 스프링원 행사가

276
00:13:36,800 --> 00:13:41,060
저희가 제공하는 소프트웨어를 더욱 더 좋게 만들 수 있는 기회라고 믿습니다

277
00:13:42,240 --> 00:13:45,360
네, 바로 여기까지가 PAS와 BOSH에 대한 부분 이었습니다

278
00:13:45,360 --> 00:13:47,620
하지만 클라우드 파운드리에는 더 많은 내용이 있는데요 ,

279
00:13:47,720 --> 00:13:49,720
예를 들면 데이터 서비스 에코 시스템입니다

280
00:13:49,740 --> 00:13:51,462
사실 피보탈에는 마켓플레이스를 통해 사용가능한

281
00:13:51,462 --> 00:13:52,840
매우 많은 데이터 서비스들이 있습니다

282
00:13:53,460 --> 00:13:55,900
Redis, MySQL,

283
00:13:55,900 --> 00:14:00,020
Rabbit,  그리고 Cloud Cache (Gemfire)

284
00:14:00,300 --> 00:14:03,160
이것들은 완전 관리형 서비스들이며,

285
00:14:03,160 --> 00:14:05,500
플랫폼에서 cf create-service 를 통해 쉽게 생성할 수 있습니다

286
00:14:06,200 --> 00:14:12,460
저희가 배운점은, 온-프레미스 환경에서 이 서비스들을 사용하는게 쉽지만은 않다는 점입니다

287
00:14:12,620 --> 00:14:15,340
그래서 여기에 앞서 설명한 현실 세계 적용 방법을 사용했는데

288
00:14:15,880 --> 00:14:20,460
첫번째로, 수정이 가능한  온디멘드 서비스를 제공합니다

289
00:14:20,680 --> 00:14:23,040
예를 들어 'Redis' 를 사용한다면

290
00:14:23,040 --> 00:14:25,720
적절한 사이즈의 Redis 클러스터를 선택 배포할 수 있습니다

291
00:14:25,760 --> 00:14:27,598
Redis 준비하기 위해 인프라팀에 대한 요청이 필요 없으며,

292
00:14:27,598 --> 00:14:29,240
cf create-service 만큼 쉽습니다

293
00:14:30,200 --> 00:14:35,320
두번째로 단일 노드에서 멀티 노드를 사용하는 방법을 추가할 수도 있는데

294
00:14:35,380 --> 00:14:38,400
예를 들면 MySQL에서 리더와 팔로워를 설정 가능하며

295
00:14:38,940 --> 00:14:41,960
Rabbit 에서는 다음 버전부터, 아니 죄송합니다 현재 버전부터

296
00:14:41,960 --> 00:14:43,780
클러스터링을 사용할 수 있습니다

297
00:14:44,920 --> 00:14:47,780
세번째로 다양한 기능 세트를 추가 했습니다

298
00:14:47,780 --> 00:14:52,580
예를 들어 PCC(피보탈 클라우드 캐시)에는 여러분의 커스텀 코드를 추가할 수 있으며

299
00:14:53,120 --> 00:14:55,920
WAN 레벨의 인메모리 데이터 복제 기능이 추가됩니다

300
00:14:55,920 --> 00:14:58,940
이건 진정한 멀티 사이트 애플리케이션 구현을 할때 도움이 될 것입니다

301
00:15:00,220 --> 00:15:03,320
이것들은 데이터 관련 서비스들에 대한 업데이트의 일부분 입니다

302
00:15:03,920 --> 00:15:05,480
이제 여러분들은

303
00:15:06,020 --> 00:15:08,260
PCF는 마치 우산 같은 의미, 즉

304
00:15:08,320 --> 00:15:11,020
다양한 도구들에 대한 집합적 의미를 가지는 것을 볼 수 있습니다

305
00:15:12,360 --> 00:15:13,640
하지만 우리는 이것만으로는

306
00:15:13,640 --> 00:15:15,280
'모든' 워크로드를 지원하지 않는다는 점을 배웠습니다

307
00:15:15,940 --> 00:15:18,760
PAS의 경우, 개발자의 생산성에 촛점을 두고 있습니다

308
00:15:18,760 --> 00:15:21,880
피보탈의 경험이 녹아있어, 
개발자들이 빠르게 움직일수 있게 도와주죠

309
00:15:21,880 --> 00:15:23,640
그래서 개발자들은 PAS를 사랑합니다

310
00:15:23,860 --> 00:15:26,000
하지만 이게 저희의 주관이 녹아있는 도구이기 때문에

311
00:15:26,080 --> 00:15:28,840
일부 다른 워크로드를 지원하는데 어려움이 있었습니다

312
00:15:29,020 --> 00:15:32,300
예를 들면,  비용을 지불해야 하는 상용 소프트웨어 지원이나

313
00:15:32,300 --> 00:15:35,780
복잡한 네트워크 구성, 또는 스티키 비트를 지원해야 하는 등의

314
00:15:35,940 --> 00:15:38,060
주로 '레거시'의 방식으로 동작하는 소프트웨어들입니다

315
00:15:38,620 --> 00:15:39,860
어떻게 할까요?

316
00:15:40,060 --> 00:15:44,960
한가지 옵션은 이 다양한 요구의 수용을위해 
PAS에 복잡한 기능을 추가하는 것인데,

317
00:15:46,140 --> 00:15:48,960
이 같은 방법은 플랫폼을 '덜 주관적이게' 하여

318
00:15:48,960 --> 00:15:51,780
즉, 개발자의 생산성을 낮추는 리스크를 떠안아야 합니다

319
00:15:52,140 --> 00:15:54,080
우리가 하고 싶은 일은 아닌것이죠

320
00:15:54,100 --> 00:15:58,020
여러분과 수많은 고객들로 부터 신뢰받는 파트너로서

321
00:15:58,020 --> 00:16:00,460
PAS가 앞으로도 개발자들에게 
재미와 생산서을 제공해야 한다고 생각했습니다

322
00:16:00,920 --> 00:16:04,280
하지만 동시에 여러분의 '다양한' 워크로드에 대한 
신뢰 있는 파트너가 되고도 싶었습니다

323
00:16:04,900 --> 00:16:06,020
그래서 저희는

324
00:16:06,860 --> 00:16:09,320
큐버네티스에 주목하게 되었습니다

325
00:16:09,320 --> 00:16:13,480
종전의 레거시 워크로드를 지원하는데 매우 탁월하며

326
00:16:13,660 --> 00:16:19,560
로우 레벨의 다양한 기능을 통제할 수 있는 
컨테이너 오케스트레이션 도구 입니다

327
00:16:20,280 --> 00:16:23,240
저희는 수많은 경우 이 두가지 도구에 대해

328
00:16:23,240 --> 00:16:26,120
OR 의 접근 방식을 사용한 것을 알고 있습니다

329
00:16:26,160 --> 00:16:28,140
이건 둘중의 하나를 선택해야 하는

330
00:16:28,140 --> 00:16:31,920
즉 개발자 생산성과 레거시 구조의 지원 사이에 선택을 의미하죠

331
00:16:32,580 --> 00:16:34,840
우린 이 'OR (또는)' 의 방법이 잘못 됬다고 생각했습니다

332
00:16:34,840 --> 00:16:38,580
이건 뭔가 분명 옳지 않은 일이기에, 이 'OR'의 접근 방식을

333
00:16:38,580 --> 00:16:41,340
'AND' 로 바꿀 수 있으면 좋겠다고 생각했습니다

334
00:16:41,800 --> 00:16:44,220
이런 '배움'을 PCF로 가져와

335
00:16:44,220 --> 00:16:47,360
다양한 엔터프라이즈 고객들이 방화벽 뒤에서

336
00:16:47,360 --> 00:16:50,480
PCF를 운영하면서 배운 것들을

337
00:16:50,480 --> 00:16:53,120
큐버네티스에 반영하기 위해

338
00:16:53,620 --> 00:16:56,220
피보탈은 구글과 VMware와 파트너링을 했습니다

339
00:16:56,640 --> 00:16:59,660
그래서 큐버네티스를 PCF 패밀리에 추가할 수 있었죠

340
00:17:00,000 --> 00:17:02,720
이걸 우리는 '피보탈 컨테이너 서비스' 라고 부릅니다

341
00:17:03,200 --> 00:17:04,380
PKS 죠

342
00:17:05,280 --> 00:17:08,320
PKS는 기본적으로 BOSH에 의해 관리되는 큐버네티스입니다

343
00:17:08,320 --> 00:17:10,940
이건 소수의 작은 인원으로 구성된 팀이

344
00:17:10,940 --> 00:17:14,060
수많은 큐버네티스 클러스터를 설치하고 운영할 수 있도록 돕습니다

345
00:17:14,060 --> 00:17:16,880
다운타임 없이 k8s의 업데이트와 보안 업데이트를 적용할 수 있으며

346
00:17:16,880 --> 00:17:20,080
항상 최신 버전의 큐버네티스를 사용할 수 있습니다

347
00:17:20,080 --> 00:17:21,820
이것이 바로 '변함 없는 호환성' 제공입니다

348
00:17:21,920 --> 00:17:24,700
우리는 PKS에 대해 기대하는 바가 매우 큽니다

349
00:17:25,920 --> 00:17:28,460
피보탈의 ISP 파트너들은

350
00:17:28,460 --> 00:17:31,640
PKS에서 자사의 워크로드를 구현하는데 매우 관심이 있으며

351
00:17:32,020 --> 00:17:33,780
여기 많은 로고의 회사들 뿐 아니라

352
00:17:34,660 --> 00:17:37,500
이 부분에 다시, IBM과 함께

353
00:17:37,500 --> 00:17:41,600
IBM이 제공하는 Docker 이미지를 
PKS에서 사용할 수 있도록 제공합니다

354
00:17:43,400 --> 00:17:45,760
PKS는 이 PCF 패밀리의 일원이구요

355
00:17:45,760 --> 00:17:48,980
'일원화된' 플랫폼 경험을 제공하는데 주력하고 있습니다

356
00:17:49,080 --> 00:17:54,100
이들은 보안, 네트워킹, 로깅, 메트릭 같은 도구를
 공유합니다

357
00:17:54,640 --> 00:17:56,500
그리고 다시, 여기

358
00:17:56,500 --> 00:17:59,220
우리는 네트워킹이 엄청나게 어려운 부분이라는 걸 깨달았습니다

359
00:17:59,360 --> 00:18:02,100
특히 컨테이너 네트워킹 부분이 그렇습니다

360
00:18:02,100 --> 00:18:05,180
그래서 가장 나은 해결 방법이 무언지 고민하던 중

361
00:18:05,180 --> 00:18:10,180
vmware와의 파트너를 통해 NSX-T를 적용할 수 있었습니다

362
00:18:10,180 --> 00:18:11,620
그래서 vmware의  SDN인 NSX를

363
00:18:11,840 --> 00:18:14,780
클라우드 컨테이너 네트워킹의 향상을 위해

364
00:18:14,780 --> 00:18:17,340
전체 피보탈 클라우드 파운드리 패밀리에서 사용할 수 있습니다

365
00:18:18,620 --> 00:18:19,620
이것이 바로

366
00:18:20,140 --> 00:18:24,440
우리 피보탈이 모든 고객에게 '신뢰 받는 파트너'가 되는 방법입니다.

367
00:18:24,900 --> 00:18:28,280
다음 버전은 피보탈 사상 가장 큰 릴리즈가 될 것이며

368
00:18:28,520 --> 00:18:30,160
그래서 저희는 이걸 PCF 2.0 이라 부릅니다

369
00:18:31,180 --> 00:18:34,380
PCF 2.0 은 소개한 모든 것들을 제공할 것이며

370
00:18:34,500 --> 00:18:36,720
우리의 미래를 밝게 할 것입니다.

371
00:18:36,780 --> 00:18:39,820
그 미래는 우리가 여러분과 함께 '배움'을 멈추지 않는 것이죠

372
00:18:40,820 --> 00:18:42,600
예를들면,

373
00:18:42,620 --> 00:18:45,160
우리는 여러분이 FaaS를 원한다는 것을 알고 있습니다

374
00:18:45,160 --> 00:18:47,420
사실 저희 피보탈도 마찬가지 입니다

375
00:18:47,540 --> 00:18:50,360
그래서 riff 를 소개하는 것이 기쁘기 그지 없는데요,

376
00:18:50,360 --> 00:18:53,040
이게 바로 피보탈이 스폰서 하는 오픈소스 FaaS입니다

377
00:18:53,040 --> 00:18:55,900
키노트 세션 중에 소개드릴 예정입니다.

378
00:18:57,600 --> 00:18:58,760
그리고 2018년에

379
00:18:58,760 --> 00:19:00,800
이 FaaS를 PCF 패밀리에 추가할 예정이며

380
00:19:00,800 --> 00:19:03,288
riff 프로젝트를 기반으로 한 이 서비스의 이름은

381
00:19:03,288 --> 00:19:05,420
피보탈 펑션 서비스(PFS) 가 될 것입니다

382
00:19:06,720 --> 00:19:09,680
이것들이 바로 PCF 2.0, 그리고 그 뒤에 있는 것들이며

383
00:19:09,680 --> 00:19:13,760
자세한 내용은 Richard Seroter 세션에서 들어보실 수 있습니다

384
00:19:14,060 --> 00:19:17,440
우리가 함께 배울 수 있는 오늘 이 시간을 즐기시길 바라며

385
00:19:17,680 --> 00:19:20,620
오늘의 배움은 우리가 
항상 빠르게 움직일 수 있도록 도와줄 것입니다

386
00:19:20,620 --> 00:19:22,260
감사합니다

387
00:19:22,260 --> 00:19:27,480
[박수]