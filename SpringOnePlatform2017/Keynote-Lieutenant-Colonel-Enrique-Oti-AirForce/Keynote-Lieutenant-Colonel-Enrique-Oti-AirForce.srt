1
00:00:01,080 --> 00:00:03,080
피보탈
(자막: yjeong@pivotal.io)

2
00:00:03,680 --> 00:00:05,680
신사 숙녀 여러분

3
00:00:05,680 --> 00:00:07,560
미국 공군, 방위 산업 혁신 실험 부문의

4
00:00:07,660 --> 00:00:11,360
Enrique Oti 중령을 박수로 맞아 주세요

5
00:00:11,540 --> 00:00:14,180
[BGM]

6
00:00:14,280 --> 00:00:21,140
[미 공군 중령이 무대로 등장]

7
00:00:21,140 --> 00:00:23,000
안녕하세요

8
00:00:24,320 --> 00:00:26,320
좋은 아침 입니다

9
00:00:26,360 --> 00:00:29,800
오늘 이 자리에 저를 초대해 주신 피보탈에 감사합니다

10
00:00:29,960 --> 00:00:33,100
안내를 통해 제가 누군지 들으셨겠지만

11
00:00:33,160 --> 00:00:35,780
제 이름은 엔리케 오티구요, DIUX 소속입니다

12
00:00:35,780 --> 00:00:38,720
저희는 구글 캠퍼스와 아주 가까운 마운틴 뷰에 위치해 있지만

13
00:00:38,720 --> 00:00:43,120
구글만큼 좋은 사무실에서 일하고 있지는 않습니다

14
00:00:43,900 --> 00:00:48,060
저기 앉아 있는 저희 팀과 저를 소개하는 것으로 시작할까 하는데요

15
00:00:48,060 --> 00:00:50,000
저는 소프트웨어 개발자가 아닙니다

16
00:00:50,240 --> 00:00:53,620
그래서 만약 제 세션에서 JDK나 API, 스프링 이야기를 기대한다면

17
00:00:53,620 --> 00:00:55,100
잘못 오셨으니까요

18
00:00:55,100 --> 00:00:56,940
전화기를 꺼내서 하고 싶은일을 하세요

19
00:00:56,940 --> 00:00:58,940
대신 저는 '프로덕트'에 대해 이야기 할겁니다

20
00:00:58,940 --> 00:01:02,180
음 그러니까 저희 DIUX가 실리콘 밸리에서 하고 있는 일은

21
00:01:02,280 --> 00:01:05,100
국방부에서 필요한 멋진 기술을 찾는 것입니다

22
00:01:05,220 --> 00:01:08,740
그래서 저는 위성 시스템이나 드론,

23
00:01:08,820 --> 00:01:11,340
생화학 시스템이나 사이버 관련 제품을 연구합니다

24
00:01:11,800 --> 00:01:14,780
그리고 제가 여기 나와서 정말 이야기 하고 싶은것은

25
00:01:14,780 --> 00:01:16,740
바로 "소프트웨어 개발" 입니다

26
00:01:16,740 --> 00:01:18,580
Mark Andreesson 의 말을 인용하자면,

27
00:01:18,580 --> 00:01:19,980
'소프트웨어가 세상을 집어삼키고' 있습니다

28
00:01:20,020 --> 00:01:22,500
그리고 이 말은 군사 부분에도 통합니다

29
00:01:22,500 --> 00:01:24,200
군에서 하고 있는 모든 것들은

30
00:01:24,280 --> 00:01:27,080
그러니까 전장에서 이루어지는 모든것은 소프트웨어 기반입니다

31
00:01:27,260 --> 00:01:29,260
소프트웨어는 전쟁에 중요한 무기입니다

32
00:01:29,420 --> 00:01:32,200
문제는, 공군에서 이 새로운 무기를

33
00:01:32,380 --> 00:01:36,500
실제 전장에 어떻게 올바르게 도입해서 사용할 것인가 하는 부분입니다

34
00:01:37,920 --> 00:01:39,920
그래서 저는 오늘,

35
00:01:39,960 --> 00:01:42,360
이 '전장 통제 센터'에 대해 말해볼께요

36
00:01:42,420 --> 00:01:44,600
보시는 센터는 카타르에 위치해 있구요

37
00:01:44,820 --> 00:01:47,400
공군 뿐만 아니라 육군이나 해군과 함께

38
00:01:47,520 --> 00:01:50,620
중동 지역 작전을 어떻게 해야 하는지 계획하는 곳입니다

39
00:01:50,760 --> 00:01:52,760
여기 앉아계신 여러분들은 아마도

40
00:01:52,760 --> 00:01:54,820
굉장한 클래식 전쟁영화들을 다 보셨으리라고 생각하는데요

41
00:01:54,820 --> 00:01:56,060
워 게임이나,

42
00:01:56,220 --> 00:01:58,420
'인디펜던트 스테이트 1,2부',

43
00:01:58,660 --> 00:02:01,380
'스타워즈' 도 마찬가지구요

44
00:02:01,380 --> 00:02:02,240
네

45
00:02:02,240 --> 00:02:04,240
헐리우드의 전쟁묘사는 일부 맞는데요

46
00:02:04,360 --> 00:02:06,360
어떤 전쟁이나 전투가 발생할때,

47
00:02:06,360 --> 00:02:09,120
사람들이 컴퓨터 앞에 모여 앉아서

48
00:02:09,200 --> 00:02:12,540
수많은 점들의 이동을 보거나, 라디오 통신 또는 전화가 불나죠

49
00:02:12,600 --> 00:02:14,600
그렇지만 헐리우드는 몇가지 놓치는 부분이 있습니다

50
00:02:14,600 --> 00:02:16,000
첫번째는요

51
00:02:16,280 --> 00:02:19,360
실제로 얼마나 많은 군인들이

52
00:02:19,380 --> 00:02:22,860
매일 컴퓨터 화면을 보고 있는지 간과한다는 점입니다

53
00:02:22,860 --> 00:02:24,300
정말 많습니다

54
00:02:24,300 --> 00:02:26,300
또한 얼마나 많은 사람들이

55
00:02:26,360 --> 00:02:29,280
그저 이메일이나 파워포인트만 보고 있는지도 간과하죠

56
00:02:29,280 --> 00:02:31,120
[청중 웃음]

57
00:02:31,560 --> 00:02:33,900
이게 지금 현대의 전쟁이자, 싸우는 방법입니다

58
00:02:34,080 --> 00:02:36,080
파워포인트는 매우 효율적인 시각화 도구죠

59
00:02:36,440 --> 00:02:38,440
그래서, DIUX에서는

60
00:02:39,460 --> 00:02:43,260
DIUX 는 공군에 필요한 다양한 도구들을 실험하는데

61
00:02:43,300 --> 00:02:46,620
전투기 통제에 소프트웨어를 통한 새로운 방법이 그중 하나입니다

62
00:02:46,940 --> 00:02:50,100
그래서 저희는 샌프란 시스코, 보스턴, 그리고 워싱턴 DC에 있는 피보탈랩과 함께

63
00:02:50,100 --> 00:02:52,600
이 부분에 대한 프로젝트를 진행하고 있습니다

64
00:02:53,080 --> 00:02:56,820
'피봇'이라 불리는 피보탈 사람들과 작년에 처음 만났는데,

65
00:02:56,920 --> 00:02:59,560
6명 정도로 이루어진 저희 팀과 처음 미팅에서 우리는

66
00:02:59,740 --> 00:03:02,340
공군의 전쟁 수행에 필요한 엄청난 소프트웨어를 만들거라는,

67
00:03:02,340 --> 00:03:03,740
목표를 확인하고 섬멸하고 계획하는 요구 사항을 말했고

68
00:03:03,940 --> 00:03:06,280
피보탈과 함께 소프트웨어 디자인 프로세스를 시작했습니다

69
00:03:06,920 --> 00:03:10,580
알파벳의 회장인 에릭 슈미트, 여러분도 알고 계신 그 분이

70
00:03:10,820 --> 00:03:12,820
카타르에 있는 저희 통제 센터에 와서는

71
00:03:12,820 --> 00:03:14,280
현장을 둘러보고 카타르 센터에서 저희에게 전화해서 말하길

72
00:03:14,600 --> 00:03:18,380
우리는 '플래닝 도구는 필요 없겠어요' 라고 하더군요

73
00:03:18,700 --> 00:03:20,820
현장에서 가장 큰 문제는

74
00:03:21,080 --> 00:03:23,400
"전투기들에 기름을 넣는(급유) 문제"가 아니겠냐고 했습니다

75
00:03:23,980 --> 00:03:27,480
여러분도 느끼다 시피 그다지 대단한 프로젝트 같지는 않지만

76
00:03:27,600 --> 00:03:31,400
에릭 슈미트는 저보다는 제품 디자인이나 
문제 인식에는 일가견이 있을거라는 믿음으로

77
00:03:31,480 --> 00:03:33,480
그 문제를 먼저 해결하기로 했습니다

78
00:03:33,780 --> 00:03:35,960
그래서 우리의 첫번째 애플리케이션은,

79
00:03:35,960 --> 00:03:37,860
'공중 급유기 운용 계획' 입니다

80
00:03:37,860 --> 00:03:39,740
이게 왜 힘든지 보여드릴게요

81
00:03:39,740 --> 00:03:42,480
항공사들과는 달리, 우리는 지상에서만 급유하지 않습니다

82
00:03:42,540 --> 00:03:45,480
전투기들은 공중에서 급유를 받는데,

83
00:03:45,580 --> 00:03:48,140
이를 위한 '탱커'는 엄청난 기름을 싣고 전투기들과 함께

84
00:03:48,140 --> 00:03:50,520
전장에서 비행합니다

85
00:03:50,520 --> 00:03:52,340
이건 쉬운 문제가 아닌데요

86
00:03:52,560 --> 00:03:56,220
대부분의 작전에서 목표를 제거하기 위해 비행하는 전투기는

87
00:03:56,220 --> 00:03:58,100
몇번의 재급유가 필요합니다

88
00:03:58,160 --> 00:04:00,460
전투기를 날게 하는데는 엄청나게 많은 연료가 필요합니다

89
00:04:00,460 --> 00:04:01,600
음

90
00:04:01,740 --> 00:04:06,180
작전을 위해 재급유를 받으러 오고 가는 와중 방귀를...

91
00:04:06,180 --> 00:04:07,860
농담이구요

92
00:04:08,540 --> 00:04:10,180
군대 농담 입니다

93
00:04:10,180 --> 00:04:12,180
서너번 정도 재급유를 합니다

94
00:04:12,360 --> 00:04:15,520
음, 그래서 이걸 어떻게 계획 해야 할까요?

95
00:04:15,580 --> 00:04:20,780
하루에 250에서 300명의 파일럿이 재급유를 받아야 하는 상황에서

96
00:04:21,080 --> 00:04:24,360
십수대밖에 없는 공중 급유기와 연결해야 하는 경우입니다

97
00:04:24,560 --> 00:04:28,840
이건 바로 엄청나게 많은 요청을 적은 수의 자원과 연결하는

98
00:04:29,040 --> 00:04:32,400
수많은 조합을 고려해야 하는 어려운 문제 입니다

99
00:04:32,760 --> 00:04:36,340
그리고 현실에서는 탱커가 부족하면 몇개의 임무를 취소해야 합니다

100
00:04:36,640 --> 00:04:39,340
이 문제를 해결해 왔던 소프트웨어를 함께 보시죠

101
00:04:39,520 --> 00:04:42,420
[상황판과 그림, 청중 웃음]

102
00:04:42,780 --> 00:04:45,180
저희는 지난 15년간 이렇게

103
00:04:45,180 --> 00:04:46,240
16년인가

104
00:04:46,460 --> 00:04:50,020
이 화이트 보드가 탱커 비행 계획 소프트웨어 였습니다

105
00:04:50,240 --> 00:04:52,620
그래서 엔지니어들은 이 화이트보드를 공부하기 시작했구요

106
00:04:52,740 --> 00:04:56,480
이거 일주일만 코딩하면 이거보다 훨씬 좋은걸 만들수 있겠다고 했습니다

107
00:04:56,620 --> 00:04:58,620
디자이너들은 이걸 보고 나서는

108
00:04:58,740 --> 00:05:01,220
7피트 영역 안의 데이터를

109
00:05:01,220 --> 00:05:04,380
24인치의 화면안에 효과적으로 담을수 있을지  고민했습니다

110
00:05:04,380 --> 00:05:06,460
솔직히 말씀 드려서

111
00:05:06,580 --> 00:05:08,860
사람과 보드마커의 조합은

112
00:05:08,860 --> 00:05:10,260
존재하는 최고의 UI입니다

113
00:05:10,260 --> 00:05:12,180
굉장히 효율적이고, 더 나아지기 힘들죠

114
00:05:12,320 --> 00:05:14,660
그래서 UI에 대해서 이야기 하기로 했습니다

115
00:05:14,660 --> 00:05:15,980
이게 우리가 만든겁니다

116
00:05:16,140 --> 00:05:18,140
화이트보드와 유사한 UI를 만들었습니다

117
00:05:18,260 --> 00:05:20,260
이것보다 더 좋은 UI를 만들 수 없었어요

118
00:05:20,440 --> 00:05:23,020
전보다 나아진 것은, 이 UI뒤에 '데이터'가 존재한다는 점입니다

119
00:05:23,120 --> 00:05:25,320
실제 진행중인 작전의 데이터를 바탕으로

120
00:05:25,320 --> 00:05:26,920
뒤에서는 데이터 계산을 진행합니다

121
00:05:26,980 --> 00:05:29,280
탱커와 전투기간의 호환성과 에러를 계산하고

122
00:05:29,440 --> 00:05:32,360
서로 관계가 없는 것들은 UI 에 표시되지도 않습니다

123
00:05:32,760 --> 00:05:34,760
몇번의 클락만으로도

124
00:05:34,820 --> 00:05:37,940
모든 작전, 그리고 세부 작전의 급유 계획을 만들 수 있습니다

125
00:05:37,940 --> 00:05:39,560
이게 왜 중요할까요?

126
00:05:39,560 --> 00:05:43,620
화이트 보드에서는 임무 계획이 변경되면

127
00:05:43,740 --> 00:05:47,740
전체 화이트보드의 내용을 다 지우고

128
00:05:47,740 --> 00:05:49,600
모든 계획을 다시 시작해야 하기 때문입니다

129
00:05:50,080 --> 00:05:53,360
이 작업을 우리는 몇개 버튼을 누르는 것으로 대신할 수 있습니다

130
00:05:53,380 --> 00:05:55,380
이건 엄청난 비용을 절감 합니다

131
00:05:55,680 --> 00:06:01,380
하루에 수십만 갤론의 연료를  '탱커 플래팅' 소프트웨어로 절약하고 있습니다

132
00:06:02,080 --> 00:06:07,200
[청중 박수]

133
00:06:08,040 --> 00:06:10,480
네, 군도 절약에 관심이 있습니다

134
00:06:10,480 --> 00:06:11,460
환경을 위해서도요.

135
00:06:12,220 --> 00:06:14,440
이 애플리케이션의 성공으로

136
00:06:14,760 --> 00:06:17,820
공군은 '혹시 다른거 더 만들어 줄 수 있어?' 라고 말했죠

137
00:06:17,840 --> 00:06:19,840
그래서 지금 7개의 추가 애플리케이션을 만들고 있습니다

138
00:06:19,840 --> 00:06:21,300
음, 다시 DIUX 는

139
00:06:21,400 --> 00:06:24,340
보스턴, 워싱턴DC, 그리고 샌프란시스코의 피보탈 랩과 함께

140
00:06:24,360 --> 00:06:26,360
7개의 추가 애플리케이션을 개발중인데

141
00:06:26,360 --> 00:06:28,440
그중 두번째 앱이 바로 '동적 목표 관제' 도구 입니다

142
00:06:28,820 --> 00:06:32,240
군에서는 우리가 하는 모든 작전이 '완수' 되어야 합니다

143
00:06:32,240 --> 00:06:33,980
지상의 목표물을 타격할때

144
00:06:33,980 --> 00:06:35,820
타격관련 프로세스는

145
00:06:35,820 --> 00:06:37,360
48 시간이 걸립니다

146
00:06:37,660 --> 00:06:40,160
실수하면 안되기 때문에 모든게 완벽해야 하죠

147
00:06:40,520 --> 00:06:42,780
문제는, 전장이 매우 유동적이라는 것입니다

148
00:06:42,960 --> 00:06:46,340
전장에서는 48 시간 이전에 '미리' 계획하는 것이 잘 통하지 않습니다

149
00:06:46,400 --> 00:06:48,580
무언가 발견되면, 즉시 타격이 필요합니다

150
00:06:48,740 --> 00:06:51,260
하지만 목표를 타격하는 결정은 더욱 더 엄격해야 하는데

151
00:06:51,380 --> 00:06:53,600
실수가 용납되면 안되기 때문입니다.

152
00:06:54,180 --> 00:06:56,980
그래서 사령부가 원했던 소프트웨어는

153
00:06:56,980 --> 00:06:59,700
이 프로세스를 정확하게 따르면서도

154
00:06:59,760 --> 00:07:03,700
실수로 아군이나 동맹군 또는 민간인을 사살하는 일이 없도록 하는 것이었습니다

155
00:07:04,140 --> 00:07:08,100
음, 그래서 저는 이 부분을 처리하는 예전 버전의 앱을 보여드리겠습니다

156
00:07:08,280 --> 00:07:12,160
그래도 어떤 컨셉을 가지고 있는지는 쉽게 알아보실수 있을거에요

157
00:07:12,800 --> 00:07:17,620
보시다 시피 목표가 설정된 화면과, 채팅화면 등등이 있습니다

158
00:07:17,620 --> 00:07:19,460
이게 우리가 만든 소프트웨어 인데요

159
00:07:19,460 --> 00:07:22,960
두번째로 만든 이 동적 목표물 타격 애플리케이션은

160
00:07:22,960 --> 00:07:25,280
전체 거대한 작전을 표현하기 보다는

161
00:07:25,400 --> 00:07:27,400
각각의 전투기가 수행해야 하는

162
00:07:27,440 --> 00:07:29,440
하나의 목표에 대한 임무를 자세하게

163
00:07:29,560 --> 00:07:31,840
하나의 폭탄으로 타격하되, 실수가 없도록 하는데 목표가 있습니다

164
00:07:32,420 --> 00:07:33,960
우리가 만든 도구는,

165
00:07:33,960 --> 00:07:35,800
관련된 모든이가 동일하게 정보를 취급하도록 하는 것입니다

166
00:07:36,240 --> 00:07:40,020
목표의 좌표에 대한 재입력 에러 발생 횟수를 제한하고

167
00:07:40,140 --> 00:07:44,140
하나의 시스템에서 다른 시스템으로 복사 및 붙여넣기 해야 하는 횟수도 제한하고 싶었습니다

168
00:07:44,380 --> 00:07:46,760
목표에 대해 작성하는 수많은 수기 노트 작성과

169
00:07:46,760 --> 00:07:48,460
확인을 위한 수많은 전화들

170
00:07:48,480 --> 00:07:50,480
이 모든 것들이 이 단일 화면 하나로

171
00:07:50,560 --> 00:07:53,960
에러를 줄이는 동시에, 임무를 보다 효율적으로 처리할 수 있습니다

172
00:07:53,960 --> 00:07:55,720
다음 슬라이드로 진행하기 전에

173
00:07:55,880 --> 00:07:58,120
스타워즈 캐논에 관심이 있으신 분들이라면

174
00:07:58,120 --> 00:08:00,200
이 애플리케이션 이름이 실수로 지어진게 아니라는걸 알겁니다

175
00:08:00,700 --> 00:08:03,280
이 소프트웨어를 위한 우리 프로젝트 명은 '케슳 런'이고

176
00:08:03,280 --> 00:08:06,300
그래서 보시다시피 앱 이름이 '케슬 런 본부' 로 명명되었습니다

177
00:08:06,300 --> 00:08:08,120
궁금하신 분들이 있을까봐요

178
00:08:09,600 --> 00:08:13,920
음, 그래서 피보탈 랩과 함께 이런 애플리케이션들을 개발하면서

179
00:08:13,920 --> 00:08:15,820
새로운 기술을 배우고도 싶었고

180
00:08:15,820 --> 00:08:17,820
방법론도 배우고자 했습니다

181
00:08:17,820 --> 00:08:19,660
저희가 사랑하는 애자일 같은 것들 말이죠

182
00:08:19,660 --> 00:08:22,860
하지만 제가 여러분들과 공유하고 싶은 가장 중요한 것은

183
00:08:22,860 --> 00:08:24,220
바로 '문화' 입니다

184
00:08:25,040 --> 00:08:28,100
마무리로 우리의 '문화'가 어떻게 영향을 주었는지 살펴보겠습니다

185
00:08:28,100 --> 00:08:29,460
[그림을 보고 웃는 청중]

186
00:08:29,580 --> 00:08:33,260
민간인과 군인들의 문화는, 음, 아주 다릅니다

187
00:08:33,380 --> 00:08:35,940
음 보시는 사진은 공군 사관학교의 이미지구요

188
00:08:35,940 --> 00:08:38,940
버클리를 졸업하셨을 여러분은 아마 이렇지는 않겠죠

189
00:08:38,940 --> 00:08:40,380
[청중 웃음]

190
00:08:42,820 --> 00:08:45,260
사실 처음에는 굉장한 문화 충격이 있었습니다

191
00:08:45,260 --> 00:08:46,840
처음 '피봇'분들을 만났을때

192
00:08:46,840 --> 00:08:48,500
했던 생각은

193
00:08:48,640 --> 00:08:51,300
피보탈은 일반적으로 부를 창출하는 일반 기업들과 일을 많이 하죠

194
00:08:51,500 --> 00:08:55,260
여러분들 같은 '일반인'들과 일하면서 말이죠

195
00:08:56,680 --> 00:08:58,560
이런 상황에서 우리 팀이 피보탈에 갔어요

196
00:08:58,560 --> 00:08:59,480
대부분 남자구요

197
00:08:59,480 --> 00:09:00,960
엄청 짧은 헤어스타일

198
00:09:01,240 --> 00:09:03,300
어, 아주 주관적인 견해를 가지고 있구요

199
00:09:03,300 --> 00:09:04,540
엄청 공격적이며

200
00:09:04,560 --> 00:09:06,560
아주 어...

201
00:09:06,840 --> 00:09:09,380
예를 들면 탁구 게임의 존재 조차 말싸움을 거는 사람들이죠

202
00:09:10,040 --> 00:09:12,280
피보탈 사람들이 대단했던 점은

203
00:09:12,300 --> 00:09:14,380
군인들이 사용하는 슬랭이나 문화를 배우고 이해하려고 했고

204
00:09:14,380 --> 00:09:18,160
전투기 조종사들이 사용하는 이런 재스쳐의 의미까지 공부했죠

205
00:09:18,400 --> 00:09:20,400
굉장했어요

206
00:09:20,400 --> 00:09:22,400
놀라운 점은, 우리쪽 역시 변하기 시작했다는 점 입니다

207
00:09:22,540 --> 00:09:24,540
우리 군인들은 대부분 '홀로' 일하는데요

208
00:09:24,720 --> 00:09:26,720
좁은 공간에서 코드를 작성하며

209
00:09:26,800 --> 00:09:29,040
5년간 하나의 소프트웨어 개발에 매달리던 사람들이었습니다

210
00:09:29,040 --> 00:09:30,520
지금은 완전히 다르죠

211
00:09:30,760 --> 00:09:34,400
우리의 개발자들은 이제 함께 일하고

212
00:09:34,400 --> 00:09:36,320
애자일의 방법으로 제품을 만들고

213
00:09:36,420 --> 00:09:38,860
사용자의 의견이 반영되는 프로세스를 통해 기능을 개선하는

214
00:09:38,860 --> 00:09:40,780
이런 방법을 사용한 결과물은 엄청났습니다

215
00:09:40,920 --> 00:09:44,100
많은 사람들이 말하기를, '군인들이?'

216
00:09:44,240 --> 00:09:46,800
'창작'과는 전혀 관계 없다고 알려진 군인들이

217
00:09:47,020 --> 00:09:49,600
그런 저기 어딘가에 앉아있는 군인들 조차 '문화'의 변화가 가능하다는

218
00:09:49,600 --> 00:09:51,740
그래서 환상적인 결과물을 만들고 있다는 점을 말하고 싶습니다

219
00:09:51,860 --> 00:09:53,860
또한 우리는 '관료적 체계'를 바꿀 수 있었습니다

220
00:09:54,260 --> 00:09:56,960
이건 아마도 일반 회사에서도 존재하는 힘든 부분일겁니다

221
00:09:57,080 --> 00:10:00,880
테스트나 보안과 같은 것들을 어떻게 프로세스에 추가할 수 있을까요

222
00:10:01,020 --> 00:10:05,580
엄청나게 복잡한 시스템의 구조와 요구사항을

223
00:10:05,580 --> 00:10:07,220
이 프로세스 안에 어떻게 반영할 수 있을까요

224
00:10:07,360 --> 00:10:10,200
공군이 요청하고, 국방부가 요청하고

225
00:10:10,200 --> 00:10:11,920
하는 이유는, 이 부분이 엄청나게 중요하기 때문입니다

226
00:10:11,980 --> 00:10:13,980
이 모든것의 저변에는

227
00:10:14,160 --> 00:10:16,160
애자일은 실재하고, 동작하는 모델이며

228
00:10:16,160 --> 00:10:18,340
군에서도 동작하는 모델임을 증명 했고

229
00:10:18,340 --> 00:10:20,340
우리가 어떤 유일한 스노우 플레이크 조직은 아니지만 어쨌든

230
00:10:20,340 --> 00:10:21,920
애자일은 동작한다는 점입니다

231
00:10:22,240 --> 00:10:26,140
우리는 군인, 레인저, 조종사들을 험한 지역에 보내고 있습니다

232
00:10:26,140 --> 00:10:29,560
우리는 그들에게 임무를 완수하기 위한 최고의 도구를 제공할 필요가 있습니다

233
00:10:29,880 --> 00:10:32,780
실리콘 벨리에서 피보탈과 함께 이런 프로젝트들을 진행하면서

234
00:10:32,840 --> 00:10:36,800
우리는 우리의 일을 더 잘할수 있다는 점을 배웠습니다

235
00:10:36,800 --> 00:10:37,620
감사합니다

236
00:10:37,760 --> 00:10:39,760
[박수]

237
00:10:40,000 --> 00:10:44,100
피보탈 
소프트웨어를 만드는 방법을 혁신합니다

